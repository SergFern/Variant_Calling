#!/usr/bin/env nextflow

params.BBDD = "/home/sergio/"

params{
  
  // Params for debugging -----------------------

  skipMain = false
  dev = false
  number_of_inputs = 1

}

params {

  //General params---------------------------
  help = false

  working_dir = "${baseDir}"
  indir = "data"
  outdir = "output"

  //Setting Directories---------------------

  BBDD_dir = "${params.BBDD}/DataBases/Homo_sapiens"
  GRCh37_dir = "${params.BBDD_dir}/Ensembl/GRCh37/Sequence"
  GRCh38_dir = "${params.BBDD_dir}/NCBI/GRCh38/Sequence"
  threads = 8
  memory = "32.G"

  dbSNP_dir = "$BBDD/DataBases/dbSNP"

  //Parameters for annotation

  genome = "GRCh37"

  snpEffdb = "${params.BBDD}/snpEffdb"
  genome_annot = "GRCh37.87"
  dbSNP_annot = "${params.dbSNP_dir}/${params.genome}/All_20180423.vcf.gz"

}

params {
  
  //Quality check params //--------------------------------------------------------

  java_mem = '4G'

  tagFastQC = false
  tagBam = false
}

params {

  // Parameters for trimming process. //--------------------------------------------------------

  // Are reads paired or single end
  //Default:
  paired = true 

  if(params.paired){ //We currently have two methods to select our data inputs
    reads = "${params.indir}/*_R{1,2}_*.fastq.gz"
  }else{reads = "${params.indir}/*.csv"}

  adapter_file = "$params.working_dir/adapters/"
  //adapter_trimm = "${params.indir}/${params.adapter_file}"

  minlen = 20
  minqual = 20

}

params {

  // Parameters for Mapping //--------------------------------------------------------

    // Defaults:
    aln = "bwa"
    prefix = "out" //prefix for output file
    platform = "ILLUMINA"
    //RG = ''
    indexRef = ''
    region_intervals = 'NO_FILE'
    GVCFmode = 'true'

    if(params.genome == "GRCh37"){ //--------------------------------------------------------
      if(params.aln == "bwa"){
          indexRef = "${params.GRCh37_dir}/BWAIndex/genome.fa"
      }else if(params.aln == "bowtie2"){
          indexRef = "${params.GRCh37_dir}/Bowtie2Index/genome"
      }

    seqRef = "${params.GRCh37_dir}/WholeGenomeFasta/genome.fa"

  }else if(params.genome == "GRCh38"){ //--------------------------------------------------------

      if(params.aln == "bwa"){
          indexRef = "${params.GRCh38_dir}/BWAIndex/genome.fa"
      }else if(params.aln == "bowtie2"){
          indexRef = "${params.GRCh38_dir}/Bowtie2Index/genome"
      }

    seqRef = "${params.GRCh38_dir}/WholeGenomeFasta/genome.fa"


    }else{
    /* RG is now declared in main.
    if(params.aln == "bwa"){
          
          //RG = "@RG\\tID:${params.prefix}\\tSM:${params.prefix}\\tPL:${params.platform}"
          
      }else if(params.aln == "bowtie2"){
          
          //RG = " --rg-id ${params.prefix} --rg SM:${params.prefix} --rg PL:${params.platform}"
      }*/

  seqRef = "${params.genome}"    
  indexRef = "${params.genome}"

  }
  mappingOptions = ""
  remove_duplicates = false
  mapping_intervals = "NO_FILE"
}

params {
  
  //Parameters for Recalibration //--------------------------------------------------------
  //dbSNP use can be cancelled by setting --dbSNP false
  //Default:
  dbSNP = ''

  if(params.dbSNP == ''){
    if(params.genome == "GRCh38" || params.genome == "GRCh37"){

      dbSNP ="${params.dbSNP_dir}/${params.genome}/common_all_20180418.vcf"

    }
  }
}

params {
  
  //Parameters for Variant calling //--------------------------------------------------------
  //Defaults:

  skip_variant_calling = true
  common_id = "*"

  VCF_files = ""

  vc = "freebayes"
  vcOpts = ""
  rmDups_GATK = ""
  ploidy = 'no'
  min_alt_fraction = ''

  if(params.vc == "gatk"){
    if(params.remove_duplicates == false){
      rmDups_GATK = "--disable-read-filter NotDuplicateReadFilter"
    }
  }

}

params {  
  //Parameters for Project_NF1

  position_correction = 'default'
  exon_annotation = ''

}

params {
  
  //Defaults parameters for FARMA
  farmaDB = "${params.BBDD}/FARMA/cipic_info_genes"
  rsID_list_FARMA = "${params.farmaDB}/Allele_definition/variant_rs.list"
    chain = "hg19ToHg38.over.chain.gz"
  chain_path = "${params.BBDD}/DataBases/${params.chain}"

}